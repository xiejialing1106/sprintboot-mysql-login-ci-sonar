spring.application.name=springboot-mysql-login-ci-sonar

# MySQL 資料庫配置（Docker 環境）
# 這些值將被 docker-compose.yml 中的環境變數覆蓋
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://mysql:3306/user_login_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:appuser}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:apppassword}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate 配置
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=false

# 伺服器配置
server.port=${SERVER_PORT:8080}

# 日誌配置
logging.level.com.example.springboot_mysql_login_ci_sonar=${LOG_LEVEL:INFO}
logging.level.org.springframework.security=${SECURITY_LOG_LEVEL:WARN}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# 連接池配置
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# 健康檢查配置
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true

