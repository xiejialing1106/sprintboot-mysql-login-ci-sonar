name: Java CI with Maven + SonarQube

on:
  push:
    branches:
      - '**'      # push 到任何分支都會觸發，若要指定分支可以改成 - main
  pull_request:
    branches:
      - main      # PR → main 才會觸發
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # SonarQube 才能看到完整 git history

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Tests with Coverage
        run: mvn clean verify

      - name: Debug SonarQube Connection
        run: |
          echo "Testing SonarQube connection..."
          curl -I --max-time 30 "${{ secrets.SONAR_HOST_URL }}" || echo "Connection failed"

      # Push 事件的 SonarQube 分析
      - name: SonarQube Analysis (Push)
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub Actions 自動提供
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=com.example:springboot-mysql-login-ci-sonar \
            -Dsonar.projectName="SpringBoot MySQL Login CI SonarQube" \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      # Pull Request 事件的 SonarQube 分析
      - name: SonarQube Analysis (Pull Request)
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=com.example:springboot-mysql-login-ci-sonar \
            -Dsonar.projectName="SpringBoot MySQL Login CI SonarQube" \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.pullrequest.key=${{ github.event.number }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref }} \
            -Dsonar.pullrequest.base=${{ github.base_ref }} \
            -Dsonar.pullrequest.github.repository=${{ github.repository }}

      # 可選：上傳測試報告作為 artifact
      - name: Upload Coverage Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.run_number }}-${{ github.sha }}
          path: |
            target/site/jacoco/jacoco.xml
            target/surefire-reports/
          retention-days: 30  # 保存30天後自動刪除